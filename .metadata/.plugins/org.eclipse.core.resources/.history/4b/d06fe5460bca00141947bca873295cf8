package com.smalwe.main;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import org.quartz.CronScheduleBuilder;
import org.quartz.JobDetail;
import org.quartz.Scheduler;
import org.quartz.SchedulerException;
import org.quartz.SchedulerFactory;
import org.quartz.SimpleScheduleBuilder;
import org.quartz.Trigger;
import org.quartz.impl.StdSchedulerFactory;

import static org.quartz.JobBuilder.*;
import static org.quartz.TriggerBuilder.*;

import com.smalwe.jobs.FristJob;
import com.smalwe.jobs.SecondJob;

public class Schedular {
	
	 Properties prop  = new Properties() ;
	
	public static void main (String args[]) throws SchedulerException, IOException {
		
		Properties prop = new Properties();
		File file = new File("config.properties");
		FileInputStream input = new FileInputStream(file);
		
		prop.load(input);
		
		input.close();
		
		System.out.println (prop.getProperty("cronSecondJob"));
		
		
		SchedulerFactory schFact = new StdSchedulerFactory();
		
		Scheduler sch = schFact.getScheduler();
		
		JobDetail job =  newJob(FristJob.class)
				.withIdentity("myJob", "group1")
				.build(); 
		
		JobDetail job2 = newJob(SecondJob.class)
				.withIdentity("secondJob", "group1")
				.usingJobData("name", "First Job")
				.build();
		
		Trigger trigger = newTrigger().withIdentity("myTrigger","group1").startNow()
				.withSchedule(SimpleScheduleBuilder.simpleSchedule()
						.withIntervalInSeconds(1)
						.repeatForever())
						.build(); 
		
		Trigger trigger2 = newTrigger().withIdentity("myTrigger2","group2")
				.withSchedule(CronScheduleBuilder.cronSchedule(prop.getProperty("cronSecondJob"))).build();
				
		

		sch.start();
		sch.scheduleJob(job, trigger);
		sch.scheduleJob(job2, trigger2); //Trigger can relate to one job only
	}
	
	private  void getProp() throws IOException {
		
		
		File file = new File("config.properties");
		FileInputStream input = new FileInputStream(file);
		prop.load(input);
		input.close();
		
		
	}
}
